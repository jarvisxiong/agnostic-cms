<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		">
	
	
	<context:property-placeholder location="classpath:properties/db.properties" ignore-unresolvable="true" />
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${db.driver.class}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Configure jOOQ's ConnectionProvider to use Spring's TransactionAwareDataSourceProxy,
         which can dynamically discover the transaction context -->
    <bean id="transactionAwareDataSource" class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
        <constructor-arg ref="dataSource" />
    </bean>
    
    <bean class="org.jooq.impl.DataSourceConnectionProvider" name="connectionProvider">
        <constructor-arg ref="transactionAwareDataSource" />
    </bean>
    
    <!-- Configure the DSL object, optionally overriding jOOQ Exceptions with Spring Exceptions -->
    <bean id="dsl" class="org.jooq.impl.DefaultDSLContext">
        <constructor-arg ref="jooqConfig" />
    </bean>
    
    <bean id="exceptionTranslator" class="com.agnosticcms.web.dbutil.JooqExceptionTranslator" />
    
    <bean class="org.jooq.impl.DefaultConfiguration" name="jooqConfig">
        <property name="SQLDialect">
        	<value type="org.jooq.SQLDialect">POSTGRES</value>
        </property>
        <property name="connectionProvider" ref="connectionProvider" />
        <property name="executeListenerProvider">
            <array>
                <bean class="org.jooq.impl.DefaultExecuteListenerProvider">
                    <constructor-arg index="0" ref="exceptionTranslator"/>
                </bean>
            </array>
        </property>
    </bean>
	
	
	<!-- PulseDB -->
	<util:properties id="pbdProperties" location="classpath:properties/pdb.properties"/>
	
	<bean id="pbdDatabaseEngine" class="com.feedzai.commons.sql.abstraction.engine.DatabaseFactory" scope="prototype" factory-method="getConnection">
		<constructor-arg ref="pbdProperties" />
	</bean>
	
	<bean id="pdbEngineProvider" class="com.agnosticcms.web.dbutil.PdbEngineProvider">
		<lookup-method name="getEngine" bean="pbdDatabaseEngine"/>
	</bean>
	
</beans>